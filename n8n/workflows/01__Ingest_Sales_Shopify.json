{
  "name": "01_Ingest_Sales_Shopify",
  "nodes": [
    {
      "parameters": {
        "triggerTimes": { "item": [{ "mode": "everyDay", "hour": 2, "minute": 0 }] }
      },
      "id": "Cron",
      "name": "Cron",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [-460, -120]
    },
    {
      "parameters": {
        "url": "https://${SHOPIFY_STORE_DOMAIN}/admin/api/2024-10/orders.json?status=any&limit=50",
        "authentication": "predefinedCredentialType",
        "options": { "splitIntoItems": true }
      },
      "id": "ListOrders",
      "name": "List Orders",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [-240, -120],
      "credentials": { "shopifyApi": { "id": "Shopify API", "name": "Shopify API" } }
    },
    {
      "parameters": {
        "functionCode": "// Normalize Shopify orders â†’ one row per line item\nconst out = [];\nfor (const it of items) {\n  const o = it.json;\n  const date = (o.created_at || '').slice(0,10);\n  if (!o.line_items) continue;\n  for (const li of o.line_items) {\n    out.push({ json: {\n      date,\n      sku: li.sku || null,\n      qty: Number(li.quantity || 0),\n      net_revenue: Number(li.price || 0) * Number(li.quantity || 0)\n    }});\n  }\n}\nreturn out;"
      },
      "id": "Normalize",
      "name": "Normalize",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [-20, -120]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "insert into fact_sales(date, product_id, orders, qty, net_revenue)\nselect $1::date, p.product_id, 1, $2::int, $3::numeric\nfrom dim_product p where p.sku = $4\non conflict (date, product_id, coalesce(channel,'all')) do update\nset orders = fact_sales.orders + 1,\n    qty = fact_sales.qty + excluded.qty,\n    net_revenue = fact_sales.net_revenue + excluded.net_revenue;",
        "values": [
          { "name": "date", "value": "={{$json.date}}" },
          { "name": "qty", "value": "={{$json.qty}}" },
          { "name": "net_revenue", "value": "={{$json.net_revenue}}" },
          { "name": "sku", "value": "={{$json.sku}}"}
        ]
      },
      "id": "UpsertPG",
      "name": "Upsert Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [220, -120],
      "credentials": { "postgres": { "id": "Warehouse Postgres", "name": "Warehouse Postgres" } }
    }
  ],
  "connections": {
    "Cron": { "main": [[{ "node": "List Orders", "type": "main", "index": 0 }]] },
    "List Orders": { "main": [[{ "node": "Normalize", "type": "main", "index": 0 }]] },
    "Normalize": { "main": [[{ "node": "Upsert Postgres", "type": "main", "index": 0 }]] }
  }
}